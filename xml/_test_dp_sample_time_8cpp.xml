<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_test_dp_sample_time_8cpp" kind="file" language="C++">
    <compoundname>TestDpSampleTime.cpp</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="_test_dp_sample_time_8h" local="yes">TestDpSampleTime.h</includes>
    <includes refid="globals_8h" local="yes">../globals.h</includes>
    <includes refid="sample_8h" local="yes">../sample/sample.h</includes>
    <incdepgraph>
      <node id="507">
        <label>duinoPRO.h</label>
      </node>
      <node id="499">
        <label>stdint.h</label>
      </node>
      <node id="505">
        <label>dp_conf.h</label>
        <link refid="dp__conf_8h"/>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="498">
        <label>C:/Users/kjph/Documents/JSITE-M1/2_work/10_uwa/1_units/ELEC5552_Design2/5_repos/DustyDuinoPro/projects/C7C.Atamo.Dusty.Mote_0_0_2/C7C.Atamo.Dusty.Mote/main/Testing/TestDpSampleTime.cpp</label>
        <link refid="_test_dp_sample_time_8cpp"/>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>../globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="500">
        <label>stddef.h</label>
      </node>
      <node id="508">
        <label>../sample/sample.h</label>
        <link refid="sample_8h_source"/>
      </node>
      <node id="502">
        <label>TestCase.h</label>
        <link refid="_test_case_8h"/>
      </node>
      <node id="506">
        <label>sample/frame.h</label>
        <link refid="frame_8h_source"/>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="501">
        <label>TestDpSampleTime.h</label>
        <link refid="_test_dp_sample_time_8h"/>
        <childnode refid="502" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>dp_sm.h</label>
        <link refid="dp__sm_8h"/>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TestDpSampleTime.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Created:<sp/>19/10/2017<sp/>9:01:11<sp/>AM</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Author:<sp/>Aaron<sp/>Hurst</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_dp_sample_time_8h" kindref="compound">TestDpSampleTime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../globals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../sample/sample.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">TestDpSampleTime::TestDpSampleTime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_dp_sample_time_1a4240ec773e29ae0e775a46480315ee38" kindref="member">TestDpSampleTime::run</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>TU_SH_DpSampleTime_op();</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDpSampleTime::TU_SH_DpSampleTime_op(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>dp_payload_flush();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Run<sp/>test<sp/>case*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_time();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Examine<sp/>outputs*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp_payload.<ref refid="structdp__payload__t_1a0d10def95285245f3ec2bd75266240f9" kindref="member">_ready_send</ref><sp/>!=<sp/>0<sp/>||<sp/>dp_payload.<ref refid="structdp__payload__t_1a6bf18d2f0973bca55f8667a348857a4a" kindref="member">_payload_ptr</ref><sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a6953b6325babf9041f2964a1d96ed09b" kindref="member">t_fail</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp_payload.<ref refid="structdp__payload__t_1af2e6ae18679b80a064d14df6fc7f72bc" kindref="member">payload</ref>[0]<sp/>!=<sp/>0b01011111)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a6953b6325babf9041f2964a1d96ed09b" kindref="member">t_fail</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp_payload.<ref refid="structdp__payload__t_1af2e6ae18679b80a064d14df6fc7f72bc" kindref="member">payload</ref>[1]<sp/>!=<sp/>0b00101010)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a6953b6325babf9041f2964a1d96ed09b" kindref="member">t_fail</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp_payload.<ref refid="structdp__payload__t_1af2e6ae18679b80a064d14df6fc7f72bc" kindref="member">payload</ref>[2]<sp/>!=<sp/>0b01010011)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a6953b6325babf9041f2964a1d96ed09b" kindref="member">t_fail</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp_payload.<ref refid="structdp__payload__t_1af2e6ae18679b80a064d14df6fc7f72bc" kindref="member">payload</ref>[3]<sp/>!=<sp/>0b00000001)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a6953b6325babf9041f2964a1d96ed09b" kindref="member">t_fail</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp_payload.<ref refid="structdp__payload__t_1af2e6ae18679b80a064d14df6fc7f72bc" kindref="member">payload</ref>[4]<sp/>!=<sp/>0b10110111)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a6953b6325babf9041f2964a1d96ed09b" kindref="member">t_fail</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*No<sp/>failed<sp/>tests<sp/>-<sp/>SUCCESS*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_test_case_1a323ab4907f1d75da591f7b8ca8d4381a" kindref="member">t_pass</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/kjph/Documents/JSITE-M1/2_work/10_uwa/1_units/ELEC5552_Design2/5_repos/DustyDuinoPro/projects/C7C.Atamo.Dusty.Mote_0_0_2/C7C.Atamo.Dusty.Mote/main/Testing/TestDpSampleTime.cpp"/>
  </compounddef>
</doxygen>
